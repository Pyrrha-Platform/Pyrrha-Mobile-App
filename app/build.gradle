apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "org.pyrrha.platform"
        minSdkVersion 19
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = ['appIdRedirectScheme': android.defaultConfig.applicationId]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation files('libs/accessory-v2.6.4.jar')
    implementation files('libs/sdk-v1.0.0.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'
    implementation('org.eclipse.paho:org.eclipse.paho.android.service:1.1.1') {
        exclude module: 'support-v4'
    }
    implementation 'com.github.ibm-cloud-security:appid-clientsdk-android:6.+'

    // We need this dependency for the api res call
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

}

android{
    configurations {
        compile.exclude group: 'org.jetbrains' , module:'annotations-java5'
    }
}

// Custom properties. This file is not in source control.
// It needs to be created from pyrrha.properties.template
// Source: https://medium.com/self-modifying-code/managing-your-android-project-using-gradle-properties-ab5a363351e6
def propFile = new File("pyrrha.properties")

Properties props = new Properties()
// Check if the file exists
if (propFile.canRead()) {
    //Load the file
    props.load(new FileInputStream(propFile))
    // If we found the file lets read in all the keys and values and add those to the buildConfig section of our template.
    if (props != null) {
        android.buildTypes.all {
            buildType ->
                props.any {
                    property ->
                        buildType.buildConfigField "String", property.key, "\"${property.value}\""
                }
        }
    } else {
        throw new InvalidUserDataException('pyrrha.properties found, but some entries are missing')
    }
} else {
    // The properties file was not found
    throw new MissingResourceException('pyrrha.properties not found')
}